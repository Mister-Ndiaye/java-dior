/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package diordiouf;

import diordiouf.asymetrique.ChiffrementAsymetrique;
import java.security.KeyPair;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.JOptionPane;

/**
 *
 * @author Dior
 */
public class AsymetriCipher extends javax.swing.JFrame {

    /**
     * Creates new form AsymetriCipher
     */
    public AsymetriCipher() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FormatDonnee = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chiffre = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        dechiffre = new javax.swing.JTextArea();
        clePrive = new javax.swing.JTextField();
        clePublic = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        algorithme = new javax.swing.JComboBox<>();
        tailleAlgo = new javax.swing.JComboBox<>();
        encryptButton = new javax.swing.JButton();
        decrypteButton = new javax.swing.JButton();
        generatecle = new javax.swing.JButton();
        fileUploadButton = new javax.swing.JButton();
        fileName = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        downloadLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(236, 242, 242));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Plaintexte");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Cipher texte");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Private Key");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Public Key");

        chiffre.setColumns(20);
        chiffre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        chiffre.setRows(5);
        jScrollPane1.setViewportView(chiffre);

        dechiffre.setColumns(20);
        dechiffre.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        dechiffre.setRows(5);
        jScrollPane2.setViewportView(dechiffre);

        clePrive.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        clePublic.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Algorhimes");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setText("Keys");

        algorithme.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        algorithme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RSA", "DH" }));
        algorithme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmeActionPerformed(evt);
            }
        });

        tailleAlgo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tailleAlgo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1024", "2048", "3072", "4096" }));
        tailleAlgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tailleAlgoActionPerformed(evt);
            }
        });

        encryptButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        encryptButton.setText("Encrypt");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });

        decrypteButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        decrypteButton.setText("Decrypt");
        decrypteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypteButtonActionPerformed(evt);
            }
        });

        generatecle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        generatecle.setText("KeyPair Generator");
        generatecle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatecleActionPerformed(evt);
            }
        });

        fileUploadButton.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        fileUploadButton.setText("Upload File");
        fileUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileUploadButtonActionPerformed(evt);
            }
        });

        fileName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fileName.setText("dior");

        FormatDonnee.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Texte");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        FormatDonnee.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jRadioButton2.setText("File");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diordiouf/images/icons8-left-48.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        downloadLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        downloadLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/diordiouf/images/download2.png"))); // NOI18N
        downloadLabel.setText("download");
        downloadLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                downloadLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(encryptButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(decrypteButton)
                        .addGap(177, 177, 177))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(clePrive, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clePublic, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(generatecle)
                                .addGap(36, 36, 36)))
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(tailleAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(jLabel1)))
                .addGap(186, 186, 186)
                .addComponent(jLabel5)
                .addGap(138, 138, 138)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(algorithme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileUploadButton)
                    .addComponent(downloadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(encryptButton)
                                    .addComponent(decrypteButton)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(algorithme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel6)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tailleAlgo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(generatecle))
                                .addGap(9, 9, 9)
                                .addComponent(fileUploadButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(clePrive, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(clePublic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(downloadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(113, 113, 113))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(212, 212, 212))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(876, 607));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        try {
            // TODO add your handling code here:
            if (format.equals("file")) {
                if (path==null) {
                    JOptionPane.showConfirmDialog(this, "choisir un fichier d'abord", "Message Erreur", JOptionPane.CLOSED_OPTION, 0);
                return;  
                    
                }
                if (publicKey==null&&privateKey==null) {
                    JOptionPane.showConfirmDialog(this, "la clef ne doit pas être null", "Error Key", JOptionPane.CLOSED_OPTION, 0);
                    return;

                }
                String pathEcrypt= path+"file_enc.txt";
                ChiffrementAsymetrique.encryptFile(path,pathEcrypt, publicKey);
                downloadLabel.setText(Hachage.chemin(pathEcrypt));
                path=pathEcrypt;
            } else {
                
                if (chiffre.getText().isEmpty()) {
                    JOptionPane.showConfirmDialog(this, "le texte ne doit pas être null", "Message Erreur", JOptionPane.CLOSED_OPTION, 0);
                    return;   
                    }
            
                if (publicKey==null&&privateKey==null) {
                    JOptionPane.showConfirmDialog(this, "la clef ne doit pas être null", "Error Key", JOptionPane.CLOSED_OPTION, 0);
                    return;

                    }
                cipher = ChiffrementAsymetrique.encryptedRSA(chiffre.getText(), publicKey);
                dechiffre.setText(cipher);
                } 
        }catch (Exception ex) {
                Logger.getLogger(AsymetriCipher.class.getName()).log(Level.SEVERE, null, ex);
            }
          
    }//GEN-LAST:event_encryptButtonActionPerformed

    private void algorithmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmeActionPerformed
        // TODO add your handling code here:
        
        String option = algorithme.getSelectedItem().toString();
    }//GEN-LAST:event_algorithmeActionPerformed

    private void tailleAlgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tailleAlgoActionPerformed
        // TODO add your handling code here:
        
        tailAlgo = Integer.parseInt(tailleAlgo.getSelectedItem().toString());
    }//GEN-LAST:event_tailleAlgoActionPerformed

    private void generatecleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatecleActionPerformed
        try {
            // TODO add your handling code here:
            keyPair = ChiffrementAsymetrique.generateKeyPair(tailAlgo);
            privateKey = keyPair.getPrivate();
            clePrive.setText(privateKey.getEncoded().toString());
            publicKey = keyPair.getPublic();
            clePublic.setText(publicKey.getEncoded().toString());
        } catch (Exception ex) {
            Logger.getLogger(AsymetriCipher.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_generatecleActionPerformed

    private void decrypteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypteButtonActionPerformed
       
        if (format.equals("file")) {
            try {
                String pathDecrypt =path+"file_dec.txt";
                ChiffrementAsymetrique.decryptFile(path,pathDecrypt,  privateKey);
                path = pathDecrypt;
                fileName.setText(Hachage.chemin(path));
                downloadLabel.setText(Hachage.chemin(path));
                return;
            }catch (Exception ex) {
                Logger.getLogger(AsymetriCipher.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else {
        try {
            // TODO add your handling code here:
            if (chiffre.getText().isEmpty()) {
                    JOptionPane.showConfirmDialog(this, "le texte ne doit pas être null", "Message Erreur", JOptionPane.CLOSED_OPTION, 0);
                    return;   
            }
            
            if (publicKey==null&&privateKey==null) {
                 JOptionPane.showConfirmDialog(this, "la clef ne doit pas être null", "Error Key", JOptionPane.CLOSED_OPTION, 0);
                return;

            }
            decipher = ChiffrementAsymetrique.decryptedRSA(cipher, privateKey);
            dechiffre.setText(cipher);
        } catch (Exception ex) {
            Logger.getLogger(AsymetriCipher.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_decrypteButtonActionPerformed

    private void fileUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileUploadButtonActionPerformed
        // TODO add your handling code here:
        
        JFileChooser chooser= new JFileChooser();
        chooser.showOpenDialog(null);
        if (chooser.getSelectedFile()!=null) {
          
            File file = chooser.getSelectedFile();
            path = file.getAbsolutePath();
            fileName.setText(file.getName());
            encryptButton.setText("Encrypte File");
            decrypteButton.setText("Decrypt File");
        }
    }//GEN-LAST:event_fileUploadButtonActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        format="texte";
        fileUploadButton.setVisible(false);
        chiffre.setVisible(true);
        dechiffre.setVisible(true);
        encryptButton.setText("Encrypt");
        decrypteButton.setText("Decrypt");
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        format = "file";
        fileUploadButton.setVisible(true);
        chiffre.setVisible(false);
        dechiffre.setVisible(false);
        encryptButton.setText("Encrypt File");
        decrypteButton.setText("Decrypt File");
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        
        Home h = new Home();
        this.setVisible(false);
        h.setVisible(true);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void downloadLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_downloadLabelMouseClicked
 
         try {
            File fileToDownload = new File(path);
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setSelectedFile(fileToDownload);
            int returnValue = fileChooser.showSaveDialog(null);

            if (returnValue == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                if (!selectedFile.exists()) {                         
                FileInputStream inputStream = new FileInputStream(fileToDownload);
                FileOutputStream outputStream = new FileOutputStream(selectedFile);

                byte[] buffer = new byte[1024];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
                

                inputStream.close();
                outputStream.close();
                
            }
                JOptionPane.showMessageDialog(null, "File downloaded successfully.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error downloading file: " + e.getMessage());
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_downloadLabelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsymetriCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsymetriCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsymetriCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsymetriCipher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsymetriCipher().setVisible(true);
            }
        });
    }
    
    private String path;
    private KeyPair keyPair ;
    private PublicKey publicKey;
    private PrivateKey privateKey;
    private String cipher;
    private String decipher;
    private int tailAlgo=1024;
    private String format="texte";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup FormatDonnee;
    private javax.swing.JComboBox<String> algorithme;
    private javax.swing.JTextArea chiffre;
    private javax.swing.JTextField clePrive;
    private javax.swing.JTextField clePublic;
    private javax.swing.JTextArea dechiffre;
    private javax.swing.JButton decrypteButton;
    private javax.swing.JLabel downloadLabel;
    private javax.swing.JButton encryptButton;
    private javax.swing.JLabel fileName;
    private javax.swing.JButton fileUploadButton;
    private javax.swing.JButton generatecle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> tailleAlgo;
    // End of variables declaration//GEN-END:variables
}
